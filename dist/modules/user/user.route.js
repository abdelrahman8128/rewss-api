"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const user_controller_1 = require("./user.controller");
const authrization_middleware_1 = require("../../Middleware/authrization/authrization.middleware");
const activity_logging_middleware_1 = require("../../Middleware/activity-logging/activity-logging.middleware");
const validation_middleware_1 = require("../../Middleware/validation/validation.middleware");
const update_users_dto_1 = require("./DTO/update.users.dto");
const seller_physical_address_dto_1 = require("./DTO/seller-physical-address.dto");
const router = (0, express_1.Router)();
router.get("/profile", authrization_middleware_1.authMiddleware, user_controller_1.getUserController);
router.get("/favorites", authrization_middleware_1.authMiddleware, user_controller_1.listFavoritesController);
router.put("/favorites/:adId", authrization_middleware_1.authMiddleware, user_controller_1.toggleFavoritesController);
router.get("/:userId", authrization_middleware_1.authMiddleware, user_controller_1.getUserByIdController);
router.patch("/profile", authrization_middleware_1.authMiddleware, (0, validation_middleware_1.validationMiddleware)(update_users_dto_1.UpdateUsersDto, true), (0, activity_logging_middleware_1.userActivityMiddleware)("updated"), user_controller_1.updateUserController);
router.post("/seller/physical-address", authrization_middleware_1.authMiddleware, (0, validation_middleware_1.validationMiddleware)(seller_physical_address_dto_1.CreateSellerPhysicalAddressDto), (0, activity_logging_middleware_1.userActivityMiddleware)("created"), user_controller_1.setSellerPhysicalAddressController);
exports.default = router;
